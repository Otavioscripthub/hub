--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.5) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then local v85=0;while true do if (v85==0) then v19=v0(v3(v30,1,1));return "";end end else local v86=0;local v87;while true do if (v86==0) then v87=v2(v0(v30,16));if v19 then local v100=0;local v101;while true do if (v100==1) then return v101;end if (v100==0) then v101=v5(v87,v19);v19=nil;v100=1;end end else return v87;end break;end end end end);local function v20(v31,v32,v33) if v33 then local v88=0 + 0 + 0 ;local v89;while true do if (v88==((0 + 0) -0)) then v89=(v31/((879 -(282 + 595))^(v32-(2 -1))))%((959 -(892 + 65))^(((v33-(1 -0)) -(v32-(2 -1))) + (620 -(555 + (152 -88))))) ;return v89-(v89%(1066 -(68 + (1842 -845)))) ;end end else local v90=(933 -(857 + 74))^(v32-1) ;return (((v31%(v90 + v90))>=v90) and (569 -(367 + 201))) or (927 -((392 -178) + 713)) ;end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35=0 + 0 ;local v36;local v37;while true do if (v35==(350 -(87 + 263))) then v36,v37=v1(v16,v18,v18 + ((6 + 1) -(1002 -(915 + 82))) );v18=v18 + ((515 -333) -(67 + 113)) ;v35=1 + 0 ;end if (v35==(1 -0)) then return (v37 * (628 -372)) + v36 ;end end end local function v23() local v38=0 + 0 ;local v39;local v40;local v41;local v42;while true do if (v38==((0 -0) -0)) then v39,v40,v41,v42=v1(v16,v18,v18 + (1190 -(1069 + (136 -(10 + 8)))) );v18=v18 + (8 -4) ;v38=1 -0 ;end if (v38==(1 + 0)) then return (v42 * (29809750 -13032534)) + (v41 * ((250083 -185071) + 524)) + (v40 * (1047 -(368 + 423))) + v39 ;end end end local function v24() local v43=(701 -(376 + 325)) -0 ;local v44;local v45;local v46;local v47;local v48;local v49;while true do if (v43==(443 -(416 + 26))) then v46=3 -2 ;v47=(v20(v45,1 + 0 ,35 -15 ) * (2^(470 -(145 + 293)))) + v44 ;v43=6 -4 ;end if (v43==((2867 -1117) -(760 + 987))) then if (v48==(430 -(44 + 386))) then if (v47==(1486 -(998 + 488))) then return v49 * (0 -0) ;else v48=1 + 0 ;v46=0 + 0 + 0 ;end elseif (v48==(5632 -3585)) then return ((v47==(772 -(201 + (1257 -686)))) and (v49 * ((1139 -(116 + 1022))/0))) or (v49 * NaN) ;end return v8(v49,v48-(4258 -3235) ) * (v46 + (v47/((2 + 0)^(189 -137)))) ;end if (0==v43) then v44=v23();v45=v23();v43=3 -2 ;end if (v43==(861 -(814 + 45))) then v48=v20(v45,35 -(9 + 5) ,136 -105 );v49=((v20(v45,78 -46 )==(1 + 0)) and  -((377 -(85 + 291)) + 0)) or (886 -(261 + 624)) ;v43=(3085 -(243 + 1022)) -(1703 + 114) ;end end end local function v25(v50) local v51;if  not v50 then v50=v23();if (v50==(1180 -(1123 + 57))) then return "";end end v51=v3(v16,v18,(v18 + v50) -(3 -2) );v18=v18 + v50 ;local v52={};for v69=1 + 0 , #v51 do v52[v69]=v2(v1(v3(v51,v69,v69)));end return v6(v52);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v53=0;local v54;local v55;local v56;local v57;local v58;local v59;local v60;local v61;local v62;while true do if ((632 -(395 + 233))==v53) then v62=nil;while true do if (v54~=0) then else local v98=0 -0 ;while true do if ((0 -0)==v98) then v55=0;v56=nil;v98=2 -1 ;end if (v98==(581 -(361 + 219))) then v54=1;break;end end end if (v54==4) then while true do if (v55==(320 -(53 + 267))) then local v102=0;while true do if (v102~=(0 + 0)) then else v56=413 -(15 + 398) ;v57=nil;v102=1;end if (v102==1) then v55=983 -(18 + 964) ;break;end end end if (v55==(7 -5)) then local v103=0 + 0 ;while true do if (v103~=(0 + 0)) then else v60=nil;v61=nil;v103=1;end if (v103==(851 -(20 + 830))) then v55=3;break;end end end if (v55==1) then local v104=0 + 0 ;local v105;while true do if (0==v104) then v105=0;while true do if (v105==(127 -(116 + 10))) then v55=2;break;end if (v105==0) then v58=nil;v59=nil;v105=1 + 0 ;end end break;end end end if (v55==3) then v62=nil;while true do local v106=0;local v107;while true do if (v106==0) then v107=738 -(542 + 196) ;while true do if (0==v107) then if (v56==(3 -1)) then local v204=0 + 0 ;local v205;local v206;while true do if ((1 + 0)==v204) then while true do if (v205==0) then v206=0;while true do if (v206~=(0 + 0)) then else local v217=0;while true do if (v217~=1) then else v206=1;break;end if (v217==0) then for v226=1,v61 do local v227=0;local v228;local v229;local v230;while true do if (1~=v227) then else v230=nil;while true do if (v228==0) then local v239=0;local v240;while true do if (v239==0) then v240=0;while true do if (v240~=(0 -0)) then else local v246=0 -0 ;while true do if (v246==(1551 -(1126 + 425))) then v229=v21();v230=nil;v246=406 -(118 + 287) ;end if (v246==1) then v240=3 -2 ;break;end end end if (v240~=(1122 -(118 + 1003))) then else v228=1;break;end end break;end end end if (v228==(2 -1)) then if (v229==(378 -(142 + 235))) then v230=v21()~=(0 -0) ;elseif (v229==(1 + 1)) then v230=v24();elseif (v229==(980 -(553 + 424))) then v230=v25();end v62[v226]=v230;break;end end break;end if ((0 -0)~=v227) then else local v232=0 + 0 ;while true do if (v232==1) then v227=1;break;end if (v232==0) then v228=0 + 0 ;v229=nil;v232=1 + 0 ;end end end end end v60[3]=v21();v217=1 + 0 ;end end end if (v206~=1) then else for v220=1,v23() do local v221=0;local v222;local v223;while true do if (v221==(0 + 0)) then v222=0 -0 ;v223=nil;v221=1;end if (v221==1) then while true do if (v222==(0 -0)) then v223=v21();if (v20(v223,2 -1 ,1)~=0) then else local v233=0;local v234;local v235;local v236;local v237;local v238;while true do if ((0 + 0)==v233) then v234=0 -0 ;v235=nil;v233=754 -(239 + 514) ;end if (v233==(1 + 0)) then v236=nil;v237=nil;v233=2;end if (v233~=2) then else v238=nil;while true do if (v234==(1329 -(797 + 532))) then local v244=0 + 0 ;while true do if (v244~=1) then else v234=1 + 0 ;break;end if (v244==(0 -0)) then v235=1202 -(373 + 829) ;v236=nil;v244=732 -(476 + 255) ;end end end if (v234==1) then local v245=1130 -(369 + 761) ;while true do if (v245==(0 + 0)) then v237=nil;v238=nil;v245=1 -0 ;end if (v245~=(1 -0)) then else v234=240 -(64 + 174) ;break;end end end if (v234==(1 + 1)) then while true do if (1==v235) then local v247=0 -0 ;while true do if (v247==(336 -(144 + 192))) then v238={v22(),v22(),nil,nil};if (v236==(0 + 0)) then local v253=0;local v254;local v255;while true do if ((0 + 0)==v253) then v254=1504 -(363 + 1141) ;v255=nil;v253=1;end if (v253~=1) then else while true do if (v254==0) then v255=1580 -(1183 + 397) ;while true do if (v255==(0 -0)) then v238[3]=v22();v238[4]=v22();break;end end break;end end break;end end elseif (v236==1) then v238[3 + 0 ]=v23();elseif (v236==2) then v238[3 + 0 ]=v23() -(2^16) ;elseif (v236==(1978 -(1913 + 62))) then local v259=0 + 0 ;local v260;local v261;while true do if (v259~=(0 -0)) then else v260=1933 -(565 + 1368) ;v261=nil;v259=1;end if ((3 -2)~=v259) then else while true do if (0~=v260) then else v261=1661 -(1477 + 184) ;while true do if (v261~=0) then else v238[3]=v23() -((2 -0)^16) ;v238[4 + 0 ]=v22();break;end end break;end end break;end end end v247=857 -(564 + 292) ;end if (v247==1) then v235=2;break;end end end if (v235~=0) then else v236=v20(v223,2 -0 ,3);v237=v20(v223,11 -7 ,310 -(244 + 60) );v235=1;end if (v235==2) then local v248=0 + 0 ;local v249;while true do if (v248==(476 -(41 + 435))) then v249=0;while true do if (v249~=1) then else v235=3;break;end if (v249~=(1001 -(938 + 63))) then else local v256=0 + 0 ;while true do if (v256==0) then if (v20(v237,1,1)==1) then v238[1127 -(936 + 189) ]=v62[v238[2]];end if (v20(v237,1 + 1 ,2)==(1614 -(1565 + 48))) then v238[3]=v62[v238[2 + 1 ]];end v256=1;end if ((1139 -(782 + 356))==v256) then v249=268 -(176 + 91) ;break;end end end end break;end end end if (v235==3) then if (v20(v237,3,7 -4 )==(1 -0)) then v238[4]=v62[v238[1096 -(975 + 117) ]];end v57[v220]=v238;break;end end break;end end break;end end end break;end end break;end end end v56=1878 -(157 + 1718) ;break;end end break;end end break;end if (v204==0) then v205=0;v206=nil;v204=1 + 0 ;end end end if (v56~=(0 -0)) then else local v207=0 -0 ;while true do if (v207~=(1018 -(697 + 321))) then else v57={};v58={};v207=2 -1 ;end if (v207==1) then v59={};v56=1;break;end end end v107=1;end if ((1 -0)==v107) then if (3==v56) then local v208=0;local v209;local v210;while true do if (v208==1) then while true do if (0~=v209) then else v210=0 -0 ;while true do if (v210==0) then local v218=0;local v219;while true do if (v218==0) then v219=0;while true do if (v219~=0) then else local v231=0;while true do if (v231==0) then for v242=1 + 0 ,v23() do v58[v242-(1 -0) ]=v28();end return v60;end end end end break;end end end end break;end end break;end if (v208==(0 -0)) then v209=0;v210=nil;v208=1228 -(322 + 905) ;end end end if (v56~=1) then else local v211=0;local v212;while true do if (v211~=(611 -(602 + 9))) then else v212=1189 -(449 + 740) ;while true do if (v212==(873 -(826 + 46))) then v62={};v56=949 -(245 + 702) ;break;end if (v212~=(0 -0)) then else local v215=0;local v216;while true do if (v215~=(0 + 0)) then else v216=1898 -(260 + 1638) ;while true do if (v216~=1) then else v212=441 -(382 + 58) ;break;end if (0~=v216) then else local v225=0 -0 ;while true do if (v225~=(1 + 0)) then else v216=1;break;end if (v225==0) then v60={v57,v58,nil,v59};v61=v23();v225=1;end end end end break;end end end end break;end end end break;end end break;end end end break;end end break;end if (v54==(1206 -(902 + 303))) then v57=nil;v58=nil;v54=2;end if (v54~=(5 -2)) then else v61=nil;v62=nil;v54=9 -5 ;end if (v54==2) then local v99=0;while true do if (v99==(0 + 0)) then v59=nil;v60=nil;v99=1;end if (v99~=1) then else v54=1693 -(1121 + 569) ;break;end end end end break;end if ((214 -(22 + 192))~=v53) then else v54=683 -(483 + 200) ;v55=nil;v53=1;end if (v53==3) then v60=nil;v61=nil;v53=1467 -(1404 + 59) ;end if (v53~=2) then else v58=nil;v59=nil;v53=3;end if (v53~=(2 -1)) then else v56=nil;v57=nil;v53=2 -0 ;end end end local function v29(v63,v64,v65) local v66=v63[1];local v67=v63[2];local v68=v63[3];return function(...) local v71=v66;local v72=v67;local v73=v68;local v74=v27;local v75=1;local v76= -1;local v77={};local v78={...};local v79=v12("#",...) -1 ;local v80={};local v81={};for v91=0,v79 do if (v91>=v73) then v77[v91-v73 ]=v78[v91 + 1 ];else v81[v91]=v78[v91 + 1 ];end end local v82=(v79-v73) + 1 ;local v83;local v84;while true do v83=v71[v75];v84=v83[1];if (v84<=23) then if (v84<=11) then if (v84<=5) then if (v84<=2) then if (v84<=0) then local v108=v83[2];v81[v108]=v81[v108](v13(v81,v108 + 1 ,v76));elseif (v84>1) then local v138=v83[2];v81[v138]=v81[v138]();else local v140=v83[2];v81[v140](v81[v140 + 1 ]);end elseif (v84<=3) then local v110=v83[2];v81[v110](v13(v81,v110 + 1 ,v83[3]));elseif (v84==4) then v65[v83[3]]=v81[v83[2]];else local v143=0;local v144;while true do if (v143==0) then v144=v83[2];v81[v144]=v81[v144](v13(v81,v144 + 1 ,v83[3]));break;end end end elseif (v84<=8) then if (v84<=6) then local v111=v83[2];v81[v111](v81[v111 + 1 ]);elseif (v84>7) then local v145=v83[3];local v146=v81[v145];for v187=v145 + 1 ,v83[4] do v146=v146   .. v81[v187] ;end v81[v83[2]]=v146;else v81[v83[2]][v83[3]]=v81[v83[4]];end elseif (v84<=9) then v81[v83[2]]=v29(v72[v83[3]],nil,v65);elseif (v84==10) then v81[v83[2]]=v81[v83[3]][v83[4]];else local v152=v83[2];local v153=v81[v83[3]];v81[v152 + 1 ]=v153;v81[v152]=v153[v83[4]];end elseif (v84<=17) then if (v84<=14) then if (v84<=12) then v81[v83[2]]=v83[3];elseif (v84==13) then local v157=v83[2];v81[v157]=v81[v157]();else for v188=v83[2],v83[3] do v81[v188]=nil;end end elseif (v84<=15) then do return;end elseif (v84>16) then v81[v83[2]]={};else v81[v83[2]]=v29(v72[v83[3]],nil,v65);end elseif (v84<=20) then if (v84<=18) then local v115=v83[2];v81[v115]=v81[v115](v13(v81,v115 + 1 ,v83[3]));elseif (v84==19) then v81[v83[2]]={};else v81[v83[2]]();end elseif (v84<=21) then v81[v83[2]]=v83[3];elseif (v84==22) then v81[v83[2]][v83[3]]=v83[4];else v81[v83[2]]=v65[v83[3]];end elseif (v84<=35) then if (v84<=29) then if (v84<=26) then if (v84<=24) then local v119=v83[2];local v120,v121=v74(v81[v119](v13(v81,v119 + 1 ,v83[3])));v76=(v121 + v119) -1 ;local v122=0;for v133=v119,v76 do v122=v122 + 1 ;v81[v133]=v120[v122];end elseif (v84==25) then if (v81[v83[2]]==v83[4]) then v75=v75 + 1 ;else v75=v83[3];end elseif (v81[v83[2]]==v83[4]) then v75=v75 + 1 ;else v75=v83[3];end elseif (v84<=27) then local v123=v83[2];v81[v123]=v81[v123](v13(v81,v123 + 1 ,v76));elseif (v84==28) then v81[v83[2]]=v81[v83[3]];else do return;end end elseif (v84<=32) then if (v84<=30) then v81[v83[2]][v83[3]]=v83[4];elseif (v84==31) then v81[v83[2]]=v65[v83[3]];else v81[v83[2]]=v81[v83[3]][v83[4]];end elseif (v84<=33) then v65[v83[3]]=v81[v83[2]];elseif (v84>34) then if (v83[2]==v81[v83[4]]) then v75=v75 + 1 ;else v75=v83[3];end else local v172=v83[2];v81[v172](v13(v81,v172 + 1 ,v83[3]));end elseif (v84<=41) then if (v84<=38) then if (v84<=36) then v81[v83[2]]=v83[3]~=0 ;elseif (v84==37) then local v173=v83[3];local v174=v81[v173];for v190=v173 + 1 ,v83[4] do v174=v174   .. v81[v190] ;end v81[v83[2]]=v174;else v75=v83[3];end elseif (v84<=39) then for v136=v83[2],v83[3] do v81[v136]=nil;end elseif (v84==40) then local v177=v83[2];local v178,v179=v74(v81[v177](v13(v81,v177 + 1 ,v83[3])));v76=(v179 + v177) -1 ;local v180=0;for v191=v177,v76 do local v192=0;while true do if (v192==0) then v180=v180 + 1 ;v81[v191]=v178[v180];break;end end end else v81[v83[2]]=v81[v83[3]];end elseif (v84<=44) then if (v84<=42) then v75=v83[3];elseif (v84==43) then v81[v83[2]]=v83[3]~=0 ;elseif (v83[2]==v81[v83[4]]) then v75=v75 + 1 ;else v75=v83[3];end elseif (v84<=45) then v81[v83[2]][v83[3]]=v81[v83[4]];elseif (v84==46) then v81[v83[2]]();else local v184=0;local v185;local v186;while true do if (v184==1) then v81[v185 + 1 ]=v186;v81[v185]=v186[v83[4]];break;end if (v184==0) then v185=v83[2];v186=v81[v83[3]];v184=1;end end end v75=v75 + 1 ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);